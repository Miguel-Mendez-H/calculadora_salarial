{"version":3,"sources":["components/screen/nav.js","components/screen/tabla.js","components/componentsapp/cargaPrestacional/CargaPrestacional.js","components/componentsapp/seguridadSocial/SeguridadSocial.js","components/config/Types.js","components/componentsapp/Salarios/Ordinario.js","components/componentsapp/Salarios/Servicios.js","components/config/Globals.js","components/componentsapp/Salarios/Integral.js","components/screen/components/contenidoTexto.js","components/screen/caculadora.js","components/screen/index.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","ButtonAppBar","classes","className","AppBar","position","Toolbar","IconButton","edge","color","Typography","variant","table","minWidth","tittle","fontSize","DenseTable","props","format","value","toLocaleString","TableContainer","component","Paper","Table","size","TableHead","TableRow","TableCell","TableBody","scope","align","data","vacaciones","prima","cesantias","intereses","pension","salud","fondoS","arl","neto","getVacaciones","salario","Math","round","SMMLV","pensionP","SALARIO_ORDINARIO","SALARIO_INTEGRAL","SALARIO_SERVICIOS","saludP","tiposDeRiesgo","getPension","tipoSalario","getSalud","getFsp","salarioBase","fsp","fspbase","calcularOrdinario","getPrima","getCesantias","getInteresesCesantias","Number","obtenerSalarioOrdinario","ingresoSalarial","otrosIngresos","console","log","dataTable","calcularPrestacionServicios","tipoDeRiesgoArl","getBaseSalarial","tipoDeRiesgo","getArl","obtenerPrestacionServicios","obtenerSalarioIntegral","calcularSalarioIntegral","obtenerGuiaApp","Calculadora","useState","setSalario","setOtrosIngresos","setTipoDeRiesgoArl","setData","TextField","id","label","type","onChange","e","parseInt","target","InputProps","startAdornment","InputAdornment","InputLabel","Select","labelId","MenuItem","ButtonGroup","Button","onClick","appHome","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da48358f.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function ButtonAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Calculadora Salarial\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","import React from \"react\"\r\nimport './tabla.css'\r\n\r\nimport { makeStyles, TableContainer, Paper, TableHead, TableRow, TableCell, TableBody, Table } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 300,\r\n    },\r\n    tittle:{\r\n        color:'white',\r\n        fontSize:'20px'\r\n    }\r\n});\r\n\r\n\r\nexport default function DenseTable(props) {\r\n    const classes = useStyles();\r\n\r\n    let format = (value) => {\r\n        if (!value) return 0\r\n        return value.toLocaleString('en-US')\r\n    }\r\n\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell className={classes.tittle}>Concepto</TableCell>\r\n                        <TableCell className={classes.tittle}>Valor</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    <TableRow>\r\n                        <TableCell component=\"td\" scope=\"row\">Vacaciones</TableCell>\r\n                        <TableCell align=\"right\" >{format(props.data.vacaciones)}</TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                        <TableCell component=\"td\" scope=\"row\">Prima</TableCell>\r\n                        <TableCell align=\"right\">{format(props.data.prima)}</TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                        <TableCell component=\"td\" scope=\"row\">Cesantias</TableCell>\r\n                        <TableCell align=\"right\">{format(props.data.cesantias)}</TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                        <TableCell component=\"td\" scope=\"row\">Intereses cesantias</TableCell>\r\n                        <TableCell align=\"right\">{format(props.data.intereses)}</TableCell>\r\n                    </TableRow>\r\n\r\n                    <TableRow>\r\n                        <TableCell component=\"td\" scope=\"row\">Pension</TableCell>\r\n                        <TableCell align=\"right\">{format(props.data.pension)}</TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                        <TableCell component=\"td\" scope=\"row\">Salud</TableCell>\r\n                        <TableCell align=\"right\">{format(props.data.salud)}</TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                        <TableCell component=\"td\" scope=\"row\">Fondo de Solidaridad</TableCell>\r\n                        <TableCell align=\"right\">{format(props.data.fondoS)}</TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                        <TableCell component=\"td\" scope=\"row\">ARL</TableCell>\r\n                        <TableCell align=\"right\">{format(props.data.arl)}</TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                        <TableCell component=\"td\" scope=\"row\">Neto</TableCell>\r\n                        <TableCell align=\"right\">{format(props.data.neto)}</TableCell>\r\n                    </TableRow>\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n}","/// cesantias, prima, vacaciones, intereses cesantias\r\n\r\nlet diasTrabajados = 30\r\nconst interesesCesantias = 0.12\r\n\r\nconst getVacaciones = (salario) => Math.round(salario * diasTrabajados / 720)\r\n\r\nconst getPrima = (salario) => Math.round(salario * diasTrabajados / 360)\r\n\r\nconst getCesantias = (salario) => Math.round((salario * diasTrabajados) / 360)\r\n\r\nconst getInteresesCesantias = (salario) => Math.round((((salario * diasTrabajados) / 360) * interesesCesantias))\r\n\r\nexport {getCesantias,getInteresesCesantias,getPrima,getVacaciones};","//Salud y pension\r\n\r\nconst SMMLV = 908526\r\n\r\nlet pensionP = {\r\n    SALARIO_ORDINARIO: 0.04,\r\n    SALARIO_INTEGRAL: 0.04,\r\n    SALARIO_SERVICIOS: 0.16\r\n}\r\n\r\nlet saludP = {\r\n    SALARIO_ORDINARIO: 0.04,\r\n    SALARIO_INTEGRAL: 0.04,\r\n    SALARIO_SERVICIOS: 0.125\r\n}\r\n\r\nlet tiposDeRiesgo = {\r\n    0: 0.00522,\r\n    1: 0.01044,\r\n    2: 0.02436,\r\n    3: 0.0435,\r\n    4: 0.06960\r\n}\r\n\r\nconst getPension = (salario, tipoSalario) => Math.round(salario * pensionP[tipoSalario])\r\n\r\nconst getSalud = (salario, tipoSalario) => Math.round(salario * saludP[tipoSalario])\r\n\r\nconst getFsp = (salario, salarioBase = salario) => {\r\n\r\n    let fsp = 0\r\n    let fspbase = salario / SMMLV\r\n\r\n    if (fspbase >= 4 && fspbase < 16) {\r\n        fsp = Math.round(salarioBase * 0.01)\r\n    } else if (fspbase >= 16 && fspbase < 17) {\r\n        fsp = Math.round(salarioBase * 0.012)\r\n\r\n    } else if (fspbase >= 17 && fspbase < 18) {\r\n        fsp = Math.round(salarioBase * 0.014)\r\n\r\n    } else if (fspbase >= 18 && fspbase < 19) {\r\n        fsp = Math.round(salarioBase * 0.016)\r\n\r\n    } else if (fspbase >= 19 && fspbase < 20) {\r\n        fsp = Math.round(salarioBase * 0.018)\r\n    } else if (fspbase >= 20) {\r\n        fsp = Math.round(salarioBase * 0.02)\r\n    }\r\n\r\n    return fsp\r\n}\r\n\r\nconst getArl = (salario, tipoDeRiesgo) => Math.round((salario * tiposDeRiesgo[tipoDeRiesgo]))\r\n\r\nexport { getFsp, getPension, getSalud, getArl}","export const SALARIO_ORDINARIO = 'SALARIO_ORDINARIO'\r\nexport const SALARIO_SERVICIOS = 'SALARIO_SERVICIOS'\r\nexport const SALARIO_INTEGRAL = 'SALARIO_INTEGRAL'","import { getCesantias, getInteresesCesantias, getPrima, getVacaciones } from '../cargaPrestacional/CargaPrestacional'\r\nimport { getFsp, getPension, getSalud } from '../seguridadSocial/SeguridadSocial'\r\nimport {SALARIO_ORDINARIO} from '../../config/Types'\r\n\r\nfunction calcularOrdinario(salario) {\r\n\r\n    let vacaciones = getVacaciones(salario)\r\n    let prima = getPrima(salario)\r\n    let cesantias = getCesantias(salario)\r\n    let intereses = getInteresesCesantias(salario)\r\n\r\n    let pension = getPension(salario, SALARIO_ORDINARIO)\r\n    \r\n    let salud = getSalud(salario, SALARIO_ORDINARIO)\r\n    \r\n    let fondoS = getFsp(salario)\r\n\r\n    let neto = Number(salario)\r\n        + vacaciones\r\n        + prima\r\n        + cesantias\r\n        + intereses\r\n        - pension\r\n        - salud\r\n        - fondoS\r\n\r\n    let data = { vacaciones: vacaciones, prima: prima, cesantias: cesantias, intereses: intereses, pension: pension, salud: salud, fondoS: fondoS, neto: neto }\r\n\r\n    return data\r\n}\r\n\r\n\r\nfunction obtenerSalarioOrdinario(ingresoSalarial,otrosIngresos) {\r\n\r\n    console.log(ingresoSalarial, otrosIngresos)\r\n\r\n    let salario = ingresoSalarial + otrosIngresos\r\n\r\n    let dataTable = calcularOrdinario(salario)\r\n    console.log(dataTable)\r\n\r\n    return dataTable\r\n}\r\n\r\nexport default obtenerSalarioOrdinario;","import { getFsp, getPension, getSalud, getArl } from '../seguridadSocial/SeguridadSocial'\r\n\r\nimport { PORCENTAJE_BASE_SALARIAL_PRESTACION_SERVICIOS } from '../../config/Globals'\r\nimport { SALARIO_SERVICIOS } from '../../config/Types'\r\n\r\n\r\n\r\n\r\nfunction calcularPrestacionServicios(salario, tipoDeRiesgoArl) {\r\n\r\n    let getBaseSalarial = salario * PORCENTAJE_BASE_SALARIAL_PRESTACION_SERVICIOS\r\n\r\n    let pension = getPension(getBaseSalarial, SALARIO_SERVICIOS)\r\n    let salud = getSalud(getBaseSalarial, SALARIO_SERVICIOS)\r\n\r\n    let fondoS = getFsp(salario, getBaseSalarial)\r\n\r\n    let arl = getArl(salario, tipoDeRiesgoArl)\r\n\r\n    let neto = Number(salario)\r\n        - pension\r\n        - salud\r\n        - fondoS\r\n        - arl\r\n\r\n    let data = { pension: pension, salud: salud, fondoS: fondoS, arl: arl, neto: neto }\r\n\r\n    console.log('datos:', data)\r\n    return data\r\n}\r\n\r\nfunction obtenerPrestacionServicios(ingresoSalarial, otrosIngresos,tipoDeRiesgoArl) {\r\n\r\n    let salario = ingresoSalarial + otrosIngresos\r\n\r\n    let dataTable = calcularPrestacionServicios(salario,tipoDeRiesgoArl)\r\n\r\n    return dataTable\r\n}\r\n\r\n\r\nexport default obtenerPrestacionServicios;","export const PORCENTAJE_BASE_SALARIAL_PRESTACION_SERVICIOS = 0.4\r\nexport const PORCENTAJE_BASE_SALARIAL_SALARIO_INTEGRAL = 0.7","import {getVacaciones} from '../cargaPrestacional/CargaPrestacional'\r\nimport {getFsp,getPension,getSalud} from '../seguridadSocial/SeguridadSocial'\r\n\r\nimport {PORCENTAJE_BASE_SALARIAL_SALARIO_INTEGRAL} from '../../config/Globals'\r\nimport {SALARIO_INTEGRAL} from '../../config/Types'\r\n\r\nfunction calcularSalarioIntegral(salario) {\r\n\r\n    let getBaseSalarial = salario * PORCENTAJE_BASE_SALARIAL_SALARIO_INTEGRAL\r\n\r\n    let vacaciones = getVacaciones(salario)\r\n    let pension = getPension(getBaseSalarial, SALARIO_INTEGRAL)\r\n    let salud = getSalud(getBaseSalarial, SALARIO_INTEGRAL)\r\n    let fondoS = getFsp(salario, getBaseSalarial)\r\n\r\n    let neto = Number(salario)\r\n    +vacaciones\r\n    -pension\r\n    -salud\r\n    -fondoS\r\n\r\n    let data = {salario:salario,vacaciones:vacaciones,pension:pension,salud:salud,fondoS:fondoS,neto:neto}\r\n\r\n    return data\r\n}\r\n\r\nfunction obtenerSalarioIntegral(ingresoSalarial,otrosIngresos) {\r\n\r\n    let salario = ingresoSalarial + otrosIngresos\r\n    \r\n    let dataTable = calcularSalarioIntegral(salario)\r\n    console.log(dataTable)\r\n\r\n    return dataTable\r\n}\r\n\r\n\r\nexport default obtenerSalarioIntegral;","import React from \"react\"\r\n\r\nfunction obtenerGuiaApp() {\r\n    return (\r\n        <div>\r\n            <h1>Calculadora Salarial</h1>\r\n            <p>\r\n                Esta calculadora te permite estimar el ingreso neto a partir de los ingresos brutos,\r\n                de acuerdo con el esquema de pago pactado con tu compañía.\r\n            </p>\r\n            <h3>1. Ingresos Laborales</h3>\r\n            <p>\r\n                Digite su salario u honorarios percibidos\r\n            </p>\r\n            <h3>2. Otros Ingresos Laborales</h3>\r\n            <p>\r\n                Digite los demas ingresos percibidos por conceptos de:\r\n               <li>Primas Ocasionales</li>\r\n               <li>Partcipacion Utilidades</li>\r\n               <li>Primas Extralegales</li>\r\n               <li>Bonificaciones</li>\r\n            </p>\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default obtenerGuiaApp\r\n","import React, { useState } from \"react\"\r\nimport './calculadora.css'\r\n\r\nimport GetTabla from './tabla'\r\nimport { ButtonGroup, Button, TextField, InputAdornment, InputLabel, Select, MenuItem } from '@material-ui/core'\r\n\r\nimport obtenerSalarioOrdinario from '../componentsapp/Salarios/Ordinario'\r\nimport obtenerPrestacionServicios from '../componentsapp/Salarios/Servicios'\r\nimport obtenerSalarioIntegral from '../componentsapp/Salarios/Integral'\r\nimport ObtenerGuiaApp from \"./components/contenidoTexto\"\r\n\r\n\r\n\r\n\r\n\r\nfunction Calculadora() {\r\n\r\n    const [salario, setSalario] = useState(0)\r\n    const [otrosIngresos, setOtrosIngresos] = useState(0)\r\n    const [tipoDeRiesgoArl, setTipoDeRiesgoArl] = useState(0)\r\n\r\n    const [data, setData] = useState({})\r\n\r\n    const handleChange = e => {\r\n        setSalario(parseInt(e.target.value || 0))\r\n    }\r\n\r\n    const handleChange2 = e => {\r\n        setOtrosIngresos(parseInt(e.target.value || 0))\r\n    }\r\n\r\n    const handleChange3 = e => {\r\n        setTipoDeRiesgoArl(parseInt(e.target.value || 0))\r\n    }\r\n\r\n    return (\r\n        <div className='containerCalculadora'>\r\n            <div className='contenidoParrafo'>\r\n                <ObtenerGuiaApp></ObtenerGuiaApp>\r\n            </div>\r\n\r\n            <div className='contenidoBotones-Tabla'>\r\n\r\n                <div className='inputParaSalario'>\r\n                    <TextField id=\"filled-basic\"\r\n                        label=\"Digite el Salario\"\r\n                        variant=\"filled\"\r\n                        type='number'\r\n                        onChange={handleChange}\r\n                        InputProps={{\r\n                            startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div className='inputParaOtrosIngresos'>\r\n                    <TextField id=\"filled-basic\"\r\n                        label=\"Digite otros ingresos\"\r\n                        variant=\"filled\"\r\n                        type='number'\r\n                        onChange={handleChange2}\r\n                        InputProps={{\r\n                            startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\r\n                        }}\r\n                    />\r\n                </div>\r\n\r\n                <div className='SelectorArl'>\r\n                    <InputLabel id=\"demo-simple-select-label\">Tarifa ARL</InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        value={tipoDeRiesgoArl}\r\n                        onChange={handleChange3}\r\n                    >\r\n                        <MenuItem value={0}>Riesgo 1 - 0.522%</MenuItem>\r\n                        <MenuItem value={1}>Riesgo 2 - 1.044%</MenuItem>\r\n                        <MenuItem value={2}>Riesgo 3 - 2.436%</MenuItem>\r\n                        <MenuItem value={3}>Riesgo 4 - 4.350%</MenuItem>\r\n                        <MenuItem value={4}>Riesgo 5 - 6.960%</MenuItem>\r\n                    </Select>\r\n                </div>\r\n\r\n                <div className='contenidoBotones'>\r\n                    <ButtonGroup variant=\"contained\" color=\"primary\" aria-label=\"contained primary button group\">\r\n                        <Button onClick={() => setData(obtenerSalarioOrdinario(salario, otrosIngresos))}>Ordinario</Button>\r\n                        <Button onClick={() => setData(obtenerSalarioIntegral(salario, otrosIngresos))}>Integral</Button>\r\n                        <Button onClick={() => setData(obtenerPrestacionServicios(salario, otrosIngresos,tipoDeRiesgoArl))}>Servicios</Button>\r\n                    </ButtonGroup>\r\n                </div>\r\n                <div className='contenidoTabla'>\r\n                    <GetTabla data={data}></GetTabla>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Calculadora;","import React from \"react\"\r\nimport GetNavbar from \"./nav\"\r\n\r\n\r\nimport Calculadora from './caculadora'\r\n\r\n// iba a tomar esto como app home como, base de la app, pero me quede pensando si cada cosita debia crearla aparte como nav.js, list,js, etc.js\r\n//y despues invocarla a una verdadera app-home y juntarlo todo. \r\nfunction appHome() {\r\n    return (\r\n        <div>\r\n         <GetNavbar></GetNavbar>\r\n         <Calculadora></Calculadora>\r\n        \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\n\r\nexport default appHome;","import './App.css';\nimport AppHome from './components/screen/index'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\n\nfunction App() {\n  return (\n<AppHome></AppHome>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}