{"version":3,"sources":["components/screen/nav.js","components/screen/tabla.js","components/componentsapp/cargaPrestacional/CargaPrestacional.js","components/componentsapp/seguridadSocial/SeguridadSocial.js","components/config/Types.js","components/componentsapp/Salarios/Ordinario.js","components/componentsapp/Salarios/Servicios.js","components/config/Globals.js","components/componentsapp/Salarios/Integral.js","components/screen/accordion.js","components/screen/caculadora.js","components/screen/index.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","ButtonAppBar","classes","className","AppBar","position","Toolbar","IconButton","edge","color","Typography","variant","table","minWidth","tittle","fontSize","ObtenerTablaCalduladora","props","format","value","toLocaleString","style","currency","maximumFractionDigits","TableContainer","component","Paper","Table","size","TableHead","TableRow","TableCell","align","colSpan","TableBody","scope","data","vacaciones","prima","cesantias","intereses","pension","salud","fondoS","arl","TableFooter","neto","getVacaciones","salario","SMMLV","pensionP","SALARIO_ORDINARIO","SALARIO_INTEGRAL","SALARIO_SERVICIOS","saludP","tiposDeRiesgo","getPension","tipoSalario","getSalud","getFsp","salarioBase","fsp","fspbase","Math","round","obtenerSalarioOrdinario","ingresoSalarial","otrosIngresos","console","log","dataTable","getPrima","getCesantias","getInteresesCesantias","Number","calcularOrdinario","calcularPrestacionServicios","tipoDeRiesgoArl","getBaseSalarial","tipoDeRiesgo","getArl","obtenerPrestacionServicios","obtenerSalarioIntegral","calcularSalarioIntegral","width","heading","typography","pxToRem","fontWeight","fontWeightRegular","SimpleAccordion","useState","expanded","setExpanded","handleChange","panel","event","isExpanded","Accordion","onChange","AccordionSummary","expandIcon","id","AccordionDetails","Calculadora","setSalario","setOtrosIngresos","setTipoDeRiesgoArl","setData","setTipoSalario","useEffect","ordinario","integral","servicios","TextField","label","type","e","parseInt","target","InputProps","startAdornment","InputAdornment","InputLabel","Select","labelId","MenuItem","ToggleButtonGroup","exclusive","ToggleButton","appHome","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1c507fb3.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport './nav.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function ButtonAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Calculadora Salarial\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","import React from \"react\"\r\nimport './tabla.css'\r\n\r\nimport { makeStyles, TableContainer, Paper, TableHead, TableRow, TableCell, TableBody, Table, TableFooter } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 300,\r\n        \r\n    },\r\n    tittle: {\r\n        color: 'white',\r\n        fontSize: '20px',\r\n    }\r\n});\r\n\r\nexport default function ObtenerTablaCalduladora(props) {\r\n    \r\n    const classes = useStyles();\r\n\r\n    let format = (value) => {\r\n        if (!value) return 0\r\n        return value.toLocaleString('es-CO',{style:'currency',currency:'COP', maximumFractionDigits:0})\r\n    }\r\n\r\n\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell align=\"center\" className={classes.tittle}>Concepto</TableCell>\r\n                        <TableCell align=\"center\" className={classes.tittle}>Valor</TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                        <TableCell className={classes.tittle} align=\"center\" colSpan={2}>\r\n                            Carga prestacional\r\n                        </TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    <TableRow>\r\n                        <TableCell component=\"td\" scope=\"row\">Vacaciones</TableCell>\r\n                        <TableCell className='cargaPrestacional' align=\"right\" >{format(props.data.vacaciones)}</TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                        <TableCell component=\"td\" scope=\"row\">Prima</TableCell>\r\n                        <TableCell className='cargaPrestacional' align=\"right\">{format(props.data.prima)}</TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                        <TableCell component=\"td\" scope=\"row\">Cesantias</TableCell>\r\n                        <TableCell className='cargaPrestacional' align=\"right\">{format(props.data.cesantias)}</TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                        <TableCell component=\"td\" scope=\"row\">Intereses cesantias</TableCell>\r\n                        <TableCell className='cargaPrestacional' align=\"right\">{format(props.data.intereses)}</TableCell>\r\n                    </TableRow>\r\n                </TableBody>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell className={classes.tittle} align=\"center\" colSpan={2}>\r\n                            Seguridad Social\r\n                        </TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    <TableRow>\r\n                        <TableCell component=\"td\" scope=\"row\">Pension</TableCell>\r\n                        <TableCell className='seguridadSocial' align=\"right\">{format(props.data.pension)}</TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                        <TableCell component=\"td\" scope=\"row\">Salud</TableCell>\r\n                        <TableCell className='seguridadSocial' align=\"right\">{format(props.data.salud)}</TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                        <TableCell component=\"td\" scope=\"row\">Fondo de Solidaridad</TableCell>\r\n                        <TableCell className='seguridadSocial' align=\"right\">{format(props.data.fondoS)}</TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                        <TableCell component=\"td\" scope=\"row\">ARL</TableCell>\r\n                        <TableCell className='seguridadSocial' align=\"right\">{format(props.data.arl)}</TableCell>\r\n                    </TableRow>\r\n                </TableBody>\r\n                <TableFooter >\r\n                    <TableRow>\r\n                        <TableCell className={classes.tittle} component=\"td\" scope=\"row\">Salario neto</TableCell>\r\n                        <TableCell  className={classes.tittle} align=\"right\">{format(props.data.neto)}</TableCell>\r\n                    </TableRow>\r\n                </TableFooter>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n}\r\n","/// cesantias, prima, vacaciones, intereses cesantias\r\n\r\nlet diasTrabajados = 30\r\nconst interesesCesantias = 0.12\r\n\r\nconst getVacaciones = (salario) => (salario * diasTrabajados / 720)\r\n\r\nconst getPrima = (salario) => (salario * diasTrabajados / 360)\r\n\r\nconst getCesantias = (salario) => ((salario * diasTrabajados) / 360)\r\n\r\nconst getInteresesCesantias = (salario) => ((((salario * diasTrabajados) / 360) * interesesCesantias))\r\n\r\nexport {getCesantias,getInteresesCesantias,getPrima,getVacaciones};","//Salud y pension\r\n\r\nconst SMMLV = 908526\r\n\r\nlet pensionP = {\r\n    SALARIO_ORDINARIO: 0.04,\r\n    SALARIO_INTEGRAL: 0.04,\r\n    SALARIO_SERVICIOS: 0.16\r\n}\r\n\r\nlet saludP = {\r\n    SALARIO_ORDINARIO: 0.04,\r\n    SALARIO_INTEGRAL: 0.04,\r\n    SALARIO_SERVICIOS: 0.125\r\n}\r\n\r\nlet tiposDeRiesgo = {\r\n    0: 0.00522,\r\n    1: 0.01044,\r\n    2: 0.02436,\r\n    3: 0.0435,\r\n    4: 0.06960\r\n}\r\n\r\nconst getPension = (salario, tipoSalario) => (salario * pensionP[tipoSalario])\r\n\r\nconst getSalud = (salario, tipoSalario) => (salario * saludP[tipoSalario])\r\n\r\nconst getFsp = (salario, salarioBase = salario) => {\r\n\r\n    let fsp = 0\r\n    let fspbase = salario / SMMLV\r\n\r\n    if (fspbase >= 4 && fspbase < 16) {\r\n        fsp = Math.round(salarioBase * 0.01)\r\n    } else if (fspbase >= 16 && fspbase < 17) {\r\n        fsp = Math.round(salarioBase * 0.012)\r\n\r\n    } else if (fspbase >= 17 && fspbase < 18) {\r\n        fsp = Math.round(salarioBase * 0.014)\r\n\r\n    } else if (fspbase >= 18 && fspbase < 19) {\r\n        fsp = Math.round(salarioBase * 0.016)\r\n\r\n    } else if (fspbase >= 19 && fspbase < 20) {\r\n        fsp = Math.round(salarioBase * 0.018)\r\n    } else if (fspbase >= 20) {\r\n        fsp = Math.round(salarioBase * 0.02)\r\n    }\r\n\r\n    return fsp\r\n}\r\n\r\nconst getArl = (salario, tipoDeRiesgo) => ((salario * tiposDeRiesgo[tipoDeRiesgo]))\r\n\r\nexport { getFsp, getPension, getSalud, getArl}","export const SALARIO_ORDINARIO = 'SALARIO_ORDINARIO'\r\nexport const SALARIO_SERVICIOS = 'SALARIO_SERVICIOS'\r\nexport const SALARIO_INTEGRAL = 'SALARIO_INTEGRAL'","import { getCesantias, getInteresesCesantias, getPrima, getVacaciones } from '../cargaPrestacional/CargaPrestacional'\r\nimport { getFsp, getPension, getSalud } from '../seguridadSocial/SeguridadSocial'\r\nimport {SALARIO_ORDINARIO} from '../../config/Types'\r\n\r\nfunction calcularOrdinario(salario) {\r\n\r\n    let vacaciones = getVacaciones(salario)\r\n    let prima = getPrima(salario)\r\n    let cesantias = getCesantias(salario)\r\n    let intereses = getInteresesCesantias(salario)\r\n\r\n    let pension = getPension(salario, SALARIO_ORDINARIO)\r\n    \r\n    let salud = getSalud(salario, SALARIO_ORDINARIO)\r\n    \r\n    let fondoS = getFsp(salario)\r\n\r\n    let neto = Number(salario)\r\n        + vacaciones\r\n        + prima\r\n        + cesantias\r\n        + intereses\r\n        - pension\r\n        - salud\r\n        - fondoS\r\n\r\n    let data = { vacaciones: vacaciones, prima: prima, cesantias: cesantias, intereses: intereses, pension: pension, salud: salud, fondoS: fondoS, neto: neto }\r\n\r\n    return data\r\n}\r\n\r\n\r\nfunction obtenerSalarioOrdinario(ingresoSalarial,otrosIngresos) {\r\n\r\n    console.log(ingresoSalarial, otrosIngresos)\r\n\r\n    let salario = ingresoSalarial + otrosIngresos\r\n\r\n    let dataTable = calcularOrdinario(salario)\r\n    console.log(dataTable)\r\n\r\n    return dataTable\r\n}\r\n\r\nexport default obtenerSalarioOrdinario;","import { getFsp, getPension, getSalud, getArl } from '../seguridadSocial/SeguridadSocial'\r\n\r\nimport { PORCENTAJE_BASE_SALARIAL_PRESTACION_SERVICIOS } from '../../config/Globals'\r\nimport { SALARIO_SERVICIOS } from '../../config/Types'\r\n\r\n\r\n\r\n\r\nfunction calcularPrestacionServicios(salario, tipoDeRiesgoArl) {\r\n\r\n   \r\n    let getBaseSalarial = salario * PORCENTAJE_BASE_SALARIAL_PRESTACION_SERVICIOS\r\n\r\n    let pension = getPension(getBaseSalarial, SALARIO_SERVICIOS)\r\n    let salud = getSalud(getBaseSalarial, SALARIO_SERVICIOS)\r\n\r\n    let fondoS = getFsp(salario, getBaseSalarial)\r\n\r\n    let arl = getArl(getBaseSalarial, tipoDeRiesgoArl)\r\n\r\n    let neto = Number(salario)\r\n        - pension\r\n        - salud\r\n        - fondoS\r\n        - arl\r\n\r\n    let data = { pension: pension, salud: salud, fondoS: fondoS, arl: arl, neto: neto }\r\n\r\n    console.log('datos:', data)\r\n    return data\r\n}\r\n\r\nfunction obtenerPrestacionServicios(ingresoSalarial, otrosIngresos,tipoDeRiesgoArl) {\r\n\r\n    let salario = Number(ingresoSalarial) + Number(otrosIngresos)\r\n\r\n    console.log('Salario', salario)\r\n\r\n    let dataTable = calcularPrestacionServicios(salario,tipoDeRiesgoArl)\r\n\r\n    return dataTable\r\n}\r\n\r\n\r\nexport default obtenerPrestacionServicios;","export const PORCENTAJE_BASE_SALARIAL_PRESTACION_SERVICIOS = 0.4\r\nexport const PORCENTAJE_BASE_SALARIAL_SALARIO_INTEGRAL = 0.7","import {getVacaciones} from '../cargaPrestacional/CargaPrestacional'\r\nimport {getFsp,getPension,getSalud} from '../seguridadSocial/SeguridadSocial'\r\n\r\nimport {PORCENTAJE_BASE_SALARIAL_SALARIO_INTEGRAL} from '../../config/Globals'\r\nimport {SALARIO_INTEGRAL} from '../../config/Types'\r\n\r\nfunction calcularSalarioIntegral(salario) {\r\n\r\n    let getBaseSalarial = salario * PORCENTAJE_BASE_SALARIAL_SALARIO_INTEGRAL\r\n\r\n    let vacaciones = getVacaciones(salario)\r\n    let pension = getPension(getBaseSalarial, SALARIO_INTEGRAL)\r\n    let salud = getSalud(getBaseSalarial, SALARIO_INTEGRAL)\r\n    let fondoS = getFsp(salario, getBaseSalarial)\r\n\r\n    let neto = Number(salario)\r\n    +vacaciones\r\n    -pension\r\n    -salud\r\n    -fondoS\r\n\r\n    let data = {salario:salario,vacaciones:vacaciones,pension:pension,salud:salud,fondoS:fondoS,neto:neto}\r\n\r\n    return data\r\n}\r\n\r\nfunction obtenerSalarioIntegral(ingresoSalarial,otrosIngresos) {\r\n\r\n    let salario = ingresoSalarial + otrosIngresos\r\n    \r\n    let dataTable = calcularSalarioIntegral(salario)\r\n    console.log(dataTable)\r\n\r\n    return dataTable\r\n}\r\n\r\n\r\nexport default obtenerSalarioIntegral;","import React from 'react';\r\nimport {useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport './accordion.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n    },\r\n}));\r\n\r\n\r\n\r\nexport default function SimpleAccordion() {\r\n    const classes = useStyles();\r\n\r\n    const [expanded, setExpanded] = useState(false);\r\n\r\n    const handleChange = (panel) => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Accordion expanded={expanded === 'panel1'} onChange={handleChange('panel1')}>\r\n                <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1a-content\"\r\n                    id=\"panel1a-header\"\r\n                >\r\n                    <Typography className={classes.heading}>Calculadora Salarial</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    <Typography>\r\n                        Esta calculadora te permite estimar el ingreso neto a partir de los ingresos brutos,\r\n                        de acuerdo con el esquema de pago pactado con tu compañía.\r\n                    </Typography>\r\n                </AccordionDetails>\r\n            </Accordion>\r\n\r\n            <Accordion expanded={expanded === 'panel2'} onChange={handleChange('panel2')}>\r\n                <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel2a-content\"\r\n                    id=\"panel2a-header\"\r\n                >\r\n                    <Typography className={classes.heading}>1. Ingresos Laborales</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    <Typography>\r\n                        Digite su salario u honorarios percibidos en su totalidad.\r\n                    </Typography>\r\n                </AccordionDetails>\r\n            </Accordion>\r\n\r\n            <Accordion expanded={expanded === 'panel3'} onChange={handleChange('panel3')}>\r\n                <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel2a-content\"\r\n                    id=\"panel2a-header\"\r\n                >\r\n                    <Typography className={classes.heading}>2. Otros Ingresos Laborales</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    <Typography>\r\n                        <p>\r\n                            Digite los demas ingresos percibidos por conceptos de:\r\n                            <li>Primas Ocasionales</li>\r\n                            <li>Partcipacion Utilidades</li>\r\n                            <li>Primas Extralegales</li>\r\n                            <li>Bonificaciones</li>\r\n                        </p>\r\n                    </Typography>\r\n                </AccordionDetails>\r\n            </Accordion>\r\n\r\n            <Accordion expanded={expanded === 'panel4'} onChange={handleChange('panel4')}>\r\n                <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel2a-content\"\r\n                    id=\"panel2a-header\"\r\n                >\r\n                    <Typography className={classes.heading}>3. Tipo de Riesgo ARL (Prestacion de servicios)</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    <Typography>\r\n                        <p>\r\n                            <p>\r\n                                Elija el tipo de riesgo que se encuentra expuesto:\r\n                            </p>\r\n                            <p>\r\n                                <li>Riesgo 1 - 0.522%</li>\r\n                                <li>Riesgo 2 - 1.044%</li>\r\n                                <li>Riesgo 3 - 2.436%</li>\r\n                                <li>Riesgo 4 - 4.350%</li>\r\n                                <li>Riesgo 5 - 6.960%</li>\r\n                            </p>\r\n                            <p>\r\n                                Todo contratista vinculado mediante un contrato de prestación de servicios sebe estar afiliado a riesgos laborales.\r\n                            </p>\r\n                            <p> El artículo 2.2.4.2.2.2 del decreto 1072 de 2015 señala\r\n                                que la afiliación a una ARL es obligatoria cuando\r\n                                el contrato de prestación de servicios sea superior\r\n                                a 1 mes, es decir, que, si el contrato de prestación\r\n                                de servicios es por un mes o menos, el contratista\r\n                                no está obligado a pagar una ARL.\r\n                            </p>\r\n                        </p>\r\n                    </Typography>\r\n                </AccordionDetails>\r\n            </Accordion>\r\n\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from \"react\"\r\nimport './calculadora.css'\r\n\r\nimport ObtenerTablaCalduladora from './tabla'\r\nimport { TextField, InputAdornment, InputLabel, Select, MenuItem } from '@material-ui/core'\r\n\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\n\r\nimport obtenerSalarioOrdinario from '../componentsapp/Salarios/Ordinario'\r\nimport obtenerPrestacionServicios from '../componentsapp/Salarios/Servicios'\r\nimport obtenerSalarioIntegral from '../componentsapp/Salarios/Integral'\r\nimport Accordion from './accordion'\r\n\r\nfunction Calculadora() {\r\n\r\n    const [salario, setSalario] = useState(0)\r\n    const [otrosIngresos, setOtrosIngresos] = useState(0)\r\n    const [tipoDeRiesgoArl, setTipoDeRiesgoArl] = useState(0)\r\n\r\n    const [data, setData] = useState({})\r\n\r\n    const [tipoSalario, setTipoSalario] = useState('ordinario');\r\n\r\n    useEffect(() => {\r\n        const tiposDeSalarios = {\r\n            ordinario: () => setData(obtenerSalarioOrdinario(salario || 0, otrosIngresos || 0)),\r\n            integral: () => setData(obtenerSalarioIntegral(salario || 0, otrosIngresos || 0)),\r\n            servicios: () => setData(obtenerPrestacionServicios(salario || 0, otrosIngresos || 0, tipoDeRiesgoArl))\r\n        }[tipoSalario]()\r\n    }, [tipoSalario, salario, otrosIngresos, tipoDeRiesgoArl])\r\n\r\n    return (\r\n        <div className='containerCalculadora'>\r\n            <div className='accordeonInformacion'>\r\n                <Accordion></Accordion>\r\n            </div>\r\n            <div className='contenidoBotones-Tabla'>\r\n                <div className = 'prueba'>\r\n                <div className='inputParaSalario'>\r\n                    <TextField id=\"filled-basic\"\r\n                        label=\"Digite el Salario\"\r\n                        variant=\"filled\"\r\n                        type='number'\r\n                        onChange={e => setSalario(parseInt(e.target.value))}\r\n                        InputProps={{\r\n                            startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div className='inputParaOtrosIngresos'>\r\n                    <TextField id=\"filled-basic\"\r\n                        label=\"Digite otros ingresos\"\r\n                        variant=\"filled\"\r\n                        type='number'\r\n                        onChange={e => setOtrosIngresos(parseInt(e.target.value))}\r\n                        InputProps={{\r\n                            startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div className='SelectorArl'>\r\n                    <InputLabel id=\"demo-simple-select-label\">Tarifa ARL</InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        value={tipoDeRiesgoArl}\r\n                        onChange={e => setTipoDeRiesgoArl(parseInt(e.target.value))}\r\n                    >\r\n                        <MenuItem value={0}>Riesgo 1 - 0.522%</MenuItem>\r\n                        <MenuItem value={1}>Riesgo 2 - 1.044%</MenuItem>\r\n                        <MenuItem value={2}>Riesgo 3 - 2.436%</MenuItem>\r\n                        <MenuItem value={3}>Riesgo 4 - 4.350%</MenuItem>\r\n                        <MenuItem value={4}>Riesgo 5 - 6.960%</MenuItem>\r\n                    </Select>\r\n                </div>\r\n                </div>\r\n                <div className='contenidoBotones'>\r\n                    <ToggleButtonGroup\r\n                        value={tipoSalario}\r\n                        exclusive\r\n                        onChange={(e, value) => setTipoSalario(value)}\r\n                        aria-label=\"text alignment\"\r\n                    >\r\n                        <ToggleButton value=\"ordinario\" aria-label=\"left aligned\">\r\n                            Ordinario\r\n                        </ToggleButton>\r\n                        <ToggleButton value=\"integral\" aria-label=\"centered\">\r\n                            Integral\r\n                        </ToggleButton>\r\n                        <ToggleButton value=\"servicios\" aria-label=\"right aligned\">\r\n                            Servicios\r\n                        </ToggleButton>\r\n                    </ToggleButtonGroup>\r\n                </div>\r\n\r\n                <div className='contenidoTabla'>\r\n                    \r\n                    <ObtenerTablaCalduladora data={data}></ObtenerTablaCalduladora>\r\n                </div>\r\n            \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Calculadora;","import React from \"react\"\r\nimport GetNavbar from \"./nav\"\r\nimport './index.css'\r\n\r\n\r\nimport Calculadora from './caculadora'\r\n\r\nfunction appHome() {\r\n    return (\r\n        <div className = 'ClaseCalculadora'>\r\n         <GetNavbar></GetNavbar>\r\n         <Calculadora></Calculadora>\r\n        \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\n\r\nexport default appHome;","import './App.css';\nimport AppHome from './components/screen/index'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  return (\n    <div className='AppHome'>\n    <AppHome></AppHome>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}